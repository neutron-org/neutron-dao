{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "open_proposal_submission"
  ],
  "properties": {
    "deposit_info": {
      "description": "Information about the deposit requirements for this module. None if no deposit.",
      "anyOf": [
        {
          "$ref": "#/definitions/UncheckedDepositInfo"
        },
        {
          "type": "null"
        }
      ]
    },
    "open_proposal_submission": {
      "description": "If false, only members (addresses with voting power) may create proposals in the DAO. Otherwise, any address may create a proposal so long as they pay the deposit.",
      "type": "boolean"
    }
  },
  "definitions": {
    "DepositRefundPolicy": {
      "oneOf": [
        {
          "description": "Deposits should always be refunded.",
          "type": "string",
          "enum": [
            "always"
          ]
        },
        {
          "description": "Deposits should only be refunded for passed proposals.",
          "type": "string",
          "enum": [
            "only_passed"
          ]
        },
        {
          "description": "Deposits should never be refunded.",
          "type": "string",
          "enum": [
            "never"
          ]
        }
      ]
    },
    "DepositToken": {
      "description": "Information about the token to use for proposal deposits.",
      "oneOf": [
        {
          "description": "Use a specific token address as the deposit token.",
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "$ref": "#/definitions/UncheckedDenom"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Use the token address of the associated DAO's voting module. NOTE: in order to use the token address of the voting module the voting module must (1) use a cw20 token and (2) implement the `TokenContract {}` query type defined by `cwd_macros::token_query`. Failing to implement that and using this option will cause instantiation to fail.",
          "type": "object",
          "required": [
            "voting_module_token"
          ],
          "properties": {
            "voting_module_token": {
              "type": "object"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UncheckedDenom": {
      "description": "A denom that has not been checked to confirm it points to a valid asset.",
      "oneOf": [
        {
          "description": "A native (bank module) asset.",
          "type": "object",
          "required": [
            "native"
          ],
          "properties": {
            "native": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "A cw20 asset.",
          "type": "object",
          "required": [
            "cw20"
          ],
          "properties": {
            "cw20": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "UncheckedDepositInfo": {
      "description": "Information about the deposit required to create a proposal.",
      "type": "object",
      "required": [
        "amount",
        "denom",
        "refund_policy"
      ],
      "properties": {
        "amount": {
          "description": "The number of tokens that must be deposited to create a proposal. Must be a positive, non-zero number.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "denom": {
          "description": "The address of the token to be used for proposal deposits.",
          "allOf": [
            {
              "$ref": "#/definitions/DepositToken"
            }
          ]
        },
        "refund_policy": {
          "description": "The policy used for refunding deposits on proposal completion.",
          "allOf": [
            {
              "$ref": "#/definitions/DepositRefundPolicy"
            }
          ]
        }
      }
    }
  }
}
