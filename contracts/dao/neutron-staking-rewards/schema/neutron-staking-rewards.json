{
  "contract_name": "neutron-staking-rewards",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "annual_reward_rate_bps",
      "blocks_per_year",
      "dao_address",
      "owner",
      "security_address",
      "staking_denom",
      "staking_info_proxy"
    ],
    "properties": {
      "annual_reward_rate_bps": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "blocks_per_year": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "dao_address": {
        "type": "string"
      },
      "owner": {
        "type": "string"
      },
      "security_address": {
        "type": "string"
      },
      "staking_denom": {
        "type": "string"
      },
      "staking_info_proxy": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Update contract configuration. Must be called by `owner`.",
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "properties": {
              "annual_reward_rate_bps": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "blocks_per_year": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "owner": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "security_address": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "staking_denom": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "staking_info_proxy": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Called by the (authorized) Staking Info Proxy whenever a userâ€™s stake changes.",
        "type": "object",
        "required": [
          "update_stake"
        ],
        "properties": {
          "update_stake": {
            "type": "object",
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Called by the (authorized) Staking Info Proxy whenever a validator gets slashed.",
        "type": "object",
        "required": [
          "slashing"
        ],
        "properties": {
          "slashing": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Called by a user to claim their accrued rewards. Allows to specify an optional address to which the rewards should be sent.",
        "type": "object",
        "required": [
          "claim_rewards"
        ],
        "properties": {
          "claim_rewards": {
            "type": "object",
            "properties": {
              "to_address": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Pauses the contract, can be called either by the owner or security_address",
        "type": "object",
        "required": [
          "pause"
        ],
        "properties": {
          "pause": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Unpauses the contract, can be called either by the owner or security_address",
        "type": "object",
        "required": [
          "unpause"
        ],
        "properties": {
          "unpause": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Returns the contract config (static parameters only).",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns just the state info (global reward index, last update).",
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the user's current pending rewards.",
        "type": "object",
        "required": [
          "rewards"
        ],
        "properties": {
          "rewards": {
            "type": "object",
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "description": "Response for `QueryMsg::Config`",
      "type": "object",
      "required": [
        "annual_reward_rate_bps",
        "blocks_per_year",
        "dao_address",
        "owner",
        "staking_denom",
        "staking_info_proxy"
      ],
      "properties": {
        "annual_reward_rate_bps": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "blocks_per_year": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "dao_address": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "staking_denom": {
          "type": "string"
        },
        "staking_info_proxy": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "rewards": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "RewardsResponse",
      "description": "Response for `QueryMsg::Rewards`",
      "type": "object",
      "required": [
        "pending_rewards"
      ],
      "properties": {
        "pending_rewards": {
          "$ref": "#/definitions/Coin"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Coin": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StateResponse",
      "description": "Response for `QueryMsg::State`",
      "type": "object",
      "required": [
        "global_reward_index",
        "last_global_update_block"
      ],
      "properties": {
        "global_reward_index": {
          "type": "string"
        },
        "last_global_update_block": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    }
  }
}
