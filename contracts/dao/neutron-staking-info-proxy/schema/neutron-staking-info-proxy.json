{
  "contract_name": "neutron-staking-info-proxy",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "owner",
      "providers",
      "staking_denom"
    ],
    "properties": {
      "owner": {
        "type": "string"
      },
      "providers": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "staking_denom": {
        "type": "string"
      },
      "staking_rewards": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Updates the contract configuration. Must be called by the `owner`.",
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "properties": {
              "owner": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "staking_denom": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "staking_rewards": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Updates staking info providers. Must be called by the `owner`.",
        "type": "object",
        "required": [
          "update_providers"
        ],
        "properties": {
          "update_providers": {
            "type": "object",
            "required": [
              "providers"
            ],
            "properties": {
              "providers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Proxies stake updates from designated providers to the staking rewards contract. Must be called by one of the `PROVIDERS`.",
        "type": "object",
        "required": [
          "update_stake"
        ],
        "properties": {
          "update_stake": {
            "type": "object",
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Proxies slashing evens from designated providers to the staking rewards contract. Must be called by one of the `PROVIDERS`.",
        "type": "object",
        "required": [
          "slashing"
        ],
        "properties": {
          "slashing": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Retrieves the contract configuration.",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Retrieves the list of providers.",
        "type": "object",
        "required": [
          "providers"
        ],
        "properties": {
          "providers": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Retrieves the user's stake summed across all providers, filtered by `config.staking_denom`.",
        "type": "object",
        "required": [
          "user_stake"
        ],
        "properties": {
          "user_stake": {
            "type": "object",
            "required": [
              "address",
              "height"
            ],
            "properties": {
              "address": {
                "type": "string"
              },
              "height": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "description": "Response for `QueryMsg::Config`",
      "type": "object",
      "required": [
        "owner",
        "staking_denom"
      ],
      "properties": {
        "owner": {
          "type": "string"
        },
        "staking_denom": {
          "type": "string"
        },
        "staking_rewards": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "providers": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProvidersResponse",
      "description": "Response for `QueryMsg::Providers`",
      "type": "object",
      "required": [
        "providers"
      ],
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "user_stake": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Coin",
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    }
  }
}
